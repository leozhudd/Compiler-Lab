declare i32 @getint()
declare void @putint(i32)
declare i32 @getch()
declare void @putch(i32)
define dso_local i32 @main(){
    %1 = alloca i32
    %2 = alloca i32
    %3 = alloca i32
    store i32 1, i32* %3
    %4 = alloca i32
    %5 = alloca i32
    store i32 5, i32* %1
    store i32 5, i32* %2
    %6 = sub i32 0, 2
    store i32 %6, i32* %4
    store i32 2, i32* %5
    %7 = load i32, i32* %1
    %8 = load i32, i32* %2
    %9 = add i32 %7, %8
    %10 = icmp eq i32 %9, 9
    %11 = load i32, i32* %1
    %12 = load i32, i32* %2
    %13 = sub i32 %11, %12
    %14 = icmp eq i32 %13, 0
    %15 = load i32, i32* %5
    %16 = icmp ne i32 %15, 4
    %17 = and ii %14, %16
    %18 = or ii %10, %17
    br i1 %18, label %19, label %20
19:
    %22 = load i32, i32* %5
    %23 = add i32 %22, 3
    store i32 %23, i32* %5
    br label %21
20:
    %24 = load i32, i32* %3
    %25 = load i32, i32* %4
    %26 = add i32 %24, %25
    %27 = sub i32 0, 1
    %28 = icmp ne i32 %26, %27
    %29 = load i32, i32* %5
    %30 = add i32 %29, 1
    %31 = srem i32 %30, 2
    %32 = icmp eq i32 %31, 1
    %33 = or ii %28, %32
    br i1 %33, label %34, label %35
34:
    %37 = load i32, i32* %5
    %38 = add i32 %37, 4
    store i32 %38, i32* %5
    br label %36
35:
    br label %36
36:
    br label %21
21:
    %39 = load i32, i32* %5
    call void @putint(i32 %39)
    ret i32 0
}
