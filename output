declare void @memset(i32*, i32, i32)
declare i32 @getint()
declare void @putint(i32)
declare i32 @getch()
declare void @putch(i32)
declare i32 @getarray(i32*)
declare void @putarray(i32, i32*)

define dso_local void @f() {
    %r1 = alloca [3 x [3 x [3 x i32]]]
    %r_for_memset2 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r1, i32 0, i32 0, i32 0, i32 0
    call void @memset(i32* %r_for_memset2, i32 0, i32 108)
    %r3 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r1, i32 0, i32 0, i32 0, i32 0
    store i32 1, i32* %r3
    %r4 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r1, i32 0, i32 0, i32 0, i32 1
    store i32 2, i32* %r4
    %r5 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r1, i32 0, i32 0, i32 0, i32 2
    store i32 3, i32* %r5
    %r6 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r1, i32 0, i32 0, i32 1, i32 0
    store i32 4, i32* %r6
    %r7 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r1, i32 0, i32 0, i32 1, i32 1
    store i32 5, i32* %r7
    %r8 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r1, i32 0, i32 0, i32 1, i32 2
    store i32 6, i32* %r8
    %r9 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r1, i32 0, i32 0, i32 2, i32 0
    store i32 7, i32* %r9
    %r10 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r1, i32 0, i32 0, i32 2, i32 1
    store i32 8, i32* %r10
    %r11 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r1, i32 0, i32 0, i32 2, i32 2
    store i32 9, i32* %r11
    %r12 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r1, i32 0, i32 1, i32 0, i32 0
    store i32 1, i32* %r12
    %r13 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r1, i32 0, i32 1, i32 0, i32 1
    store i32 2, i32* %r13
    %r14 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r1, i32 0, i32 1, i32 0, i32 2
    store i32 3, i32* %r14
    %r15 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r1, i32 0, i32 1, i32 1, i32 0
    store i32 4, i32* %r15
    %r16 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r1, i32 0, i32 1, i32 1, i32 1
    store i32 5, i32* %r16
    %r17 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r1, i32 0, i32 1, i32 1, i32 2
    store i32 6, i32* %r17
    %r18 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r1, i32 0, i32 1, i32 2, i32 0
    store i32 7, i32* %r18
    %r19 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r1, i32 0, i32 1, i32 2, i32 1
    store i32 8, i32* %r19
    %r20 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r1, i32 0, i32 1, i32 2, i32 2
    store i32 9, i32* %r20
    %r21 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r1, i32 0, i32 2, i32 0, i32 0
    store i32 1, i32* %r21
    %r22 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r1, i32 0, i32 2, i32 0, i32 1
    store i32 2, i32* %r22
    %r23 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r1, i32 0, i32 2, i32 0, i32 2
    store i32 3, i32* %r23
    %r24 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r1, i32 0, i32 2, i32 1, i32 0
    store i32 4, i32* %r24
    %r25 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r1, i32 0, i32 2, i32 1, i32 1
    store i32 5, i32* %r25
    %r26 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r1, i32 0, i32 2, i32 1, i32 2
    store i32 6, i32* %r26
    %r27 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r1, i32 0, i32 2, i32 2, i32 0
    store i32 7, i32* %r27
    %r28 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r1, i32 0, i32 2, i32 2, i32 1
    store i32 8, i32* %r28
    %r29 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r1, i32 0, i32 2, i32 2, i32 2
    store i32 9, i32* %r29
    %r30 = alloca [3 x [3 x [3 x i32]]]
    %r_for_memset31 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r30, i32 0, i32 0, i32 0, i32 0
    call void @memset(i32* %r_for_memset31, i32 0, i32 108)
    %r32 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r30, i32 0, i32 0, i32 0, i32 0
    store i32 1, i32* %r32
    %r33 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r30, i32 0, i32 0, i32 0, i32 1
    store i32 2, i32* %r33
    %r34 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r30, i32 0, i32 0, i32 0, i32 2
    store i32 3, i32* %r34
    %r35 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r30, i32 0, i32 0, i32 1, i32 0
    store i32 4, i32* %r35
    %r36 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r30, i32 0, i32 0, i32 1, i32 1
    store i32 5, i32* %r36
    %r37 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r30, i32 0, i32 0, i32 1, i32 2
    store i32 6, i32* %r37
    %r38 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r30, i32 0, i32 0, i32 2, i32 0
    store i32 7, i32* %r38
    %r39 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r30, i32 0, i32 0, i32 2, i32 1
    store i32 8, i32* %r39
    %r40 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r30, i32 0, i32 0, i32 2, i32 2
    store i32 9, i32* %r40
    %r41 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r30, i32 0, i32 1, i32 0, i32 0
    store i32 1, i32* %r41
    %r42 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r30, i32 0, i32 1, i32 0, i32 1
    store i32 2, i32* %r42
    %r43 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r30, i32 0, i32 1, i32 0, i32 2
    store i32 3, i32* %r43
    %r44 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r30, i32 0, i32 1, i32 1, i32 0
    store i32 4, i32* %r44
    %r45 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r30, i32 0, i32 1, i32 1, i32 1
    store i32 5, i32* %r45
    %r46 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r30, i32 0, i32 1, i32 1, i32 2
    store i32 6, i32* %r46
    %r47 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r30, i32 0, i32 1, i32 2, i32 0
    store i32 7, i32* %r47
    %r48 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r30, i32 0, i32 1, i32 2, i32 1
    store i32 8, i32* %r48
    %r49 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r30, i32 0, i32 1, i32 2, i32 2
    store i32 9, i32* %r49
    %r50 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r30, i32 0, i32 2, i32 0, i32 0
    store i32 1, i32* %r50
    %r51 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r30, i32 0, i32 2, i32 0, i32 1
    store i32 2, i32* %r51
    %r52 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r30, i32 0, i32 2, i32 0, i32 2
    store i32 3, i32* %r52
    %r53 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r30, i32 0, i32 2, i32 1, i32 0
    store i32 4, i32* %r53
    %r54 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r30, i32 0, i32 2, i32 1, i32 1
    store i32 5, i32* %r54
    %r55 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r30, i32 0, i32 2, i32 1, i32 2
    store i32 6, i32* %r55
    %r56 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r30, i32 0, i32 2, i32 2, i32 0
    store i32 7, i32* %r56
    %r57 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r30, i32 0, i32 2, i32 2, i32 1
    store i32 8, i32* %r57
    %r58 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r30, i32 0, i32 2, i32 2, i32 2
    store i32 9, i32* %r58
    %r59 = alloca [3 x [3 x [3 x i32]]]
    %r_for_memset60 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r59, i32 0, i32 0, i32 0, i32 0
    call void @memset(i32* %r_for_memset60, i32 0, i32 108)
    %r61 = alloca i32
    %r62 = alloca i32
    %r63 = alloca i32
    %r64 = alloca i32
    store i32 0, i32* %r64
    %r65 = alloca i32
    store i32 0, i32* %r65
    %r66 = alloca i32
    store i32 0, i32* %r66
    br label %r67
r67:
    %r70 = load i32, i32* %r64
    %r71 = icmp slt i32 %r70, 3
    %r72 = zext i1 %r71 to i32
    %r73 = icmp ne i32 %r72, 0
    br i1 %r73, label %r68, label %r69
r68:
    store i32 0, i32* %r65
    br label %r74
r74:
    %r77 = load i32, i32* %r65
    %r78 = icmp slt i32 %r77, 3
    %r79 = zext i1 %r78 to i32
    %r80 = icmp ne i32 %r79, 0
    br i1 %r80, label %r75, label %r76
r75:
    store i32 0, i32* %r66
    br label %r81
r81:
    %r84 = load i32, i32* %r66
    %r85 = icmp slt i32 %r84, 3
    %r86 = zext i1 %r85 to i32
    %r87 = icmp ne i32 %r86, 0
    br i1 %r87, label %r82, label %r83
r82:
    %r88 = load i32, i32* %r64
    %r89 = load i32, i32* %r65
    %r90 = load i32, i32* %r66
    %r91 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r59, i32 0, i32 %r88, i32 %r89, i32 %r90
    %r92 = load i32, i32* %r64
    %r93 = load i32, i32* %r65
    %r94 = load i32, i32* %r66
    %r95 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r1, i32 0, i32 %r92, i32 %r93, i32 %r94
    %r96 = load i32, i32* %r95
    %r97 = load i32, i32* %r64
    %r98 = load i32, i32* %r65
    %r99 = load i32, i32* %r66
    %r100 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r30, i32 0, i32 %r97, i32 %r98, i32 %r99
    %r101 = load i32, i32* %r100
    %r102 = add i32 %r96, %r101
    store i32 %r102, i32* %r91
    %r103 = load i32, i32* %r66
    %r104 = add i32 %r103, 1
    store i32 %r104, i32* %r66
    br label %r81
r83:
    %r105 = load i32, i32* %r65
    %r106 = add i32 %r105, 1
    store i32 %r106, i32* %r65
    br label %r74
r76:
    %r107 = load i32, i32* %r64
    %r108 = add i32 %r107, 1
    store i32 %r108, i32* %r64
    br label %r67
r69:
    %r109 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r59, i32 0
, i32 0, i32 0, i32 0
    call void @putarray(i32 3, i32* %r109)
    %r110 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r59, i32 0
, i32 0, i32 1, i32 0
    call void @putarray(i32 3, i32* %r110)
    %r111 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r59, i32 0
, i32 0, i32 2, i32 0
    call void @putarray(i32 3, i32* %r111)
    %r112 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r59, i32 0
, i32 1, i32 0, i32 0
    call void @putarray(i32 3, i32* %r112)
    %r113 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r59, i32 0
, i32 1, i32 1, i32 0
    call void @putarray(i32 3, i32* %r113)
    %r114 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r59, i32 0
, i32 1, i32 2, i32 0
    call void @putarray(i32 3, i32* %r114)
    %r115 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r59, i32 0
, i32 2, i32 0, i32 0
    call void @putarray(i32 3, i32* %r115)
    %r116 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r59, i32 0
, i32 2, i32 1, i32 0
    call void @putarray(i32 3, i32* %r116)
    %r117 = getelementptr [3 x [3 x [3 x i32]]], [3 x [3 x [3 x i32]]]* %r59, i32 0
, i32 2, i32 2, i32 0
    call void @putarray(i32 3, i32* %r117)
    ret void
}
define dso_local i32 @main() {
    call void @f()
    ret i32 0
ret i32 0
}
