declare void @memset(i32*, i32, i32)
declare i32 @getint()
declare void @putint(i32)
declare i32 @getch()
declare void @putch(i32)
declare i32 @getarray(i32*)
declare void @putarray(i32, i32*)

define dso_local i32 @exgcd(i32 %r1, i32 %r2, i32* %r3, i32* %r4) {
    %r5 = alloca i32
    store i32 %r2, i32* %r5
    %r6 = alloca i32
    store i32 %r1, i32* %r6
    %r7 = load i32, i32* %r5
    %r8 = icmp eq i32 %r7, 0
    %r9 = zext i1 %r8 to i32
    %r10 = icmp ne i32 %r9, 0
    br i1 %r10, label %r11, label %r12
r11:
    %r14 = getelementptr i32, i32* %r3, i32 0
    store i32 1, i32* %r14
    %r15 = getelementptr i32, i32* %r4, i32 0
    store i32 0, i32* %r15
    %r16 = load i32, i32* %r6
    ret i32 %r16
    br label %r13
r12:
    %r17 = alloca i32
    %r19 = load i32, i32* %r5
    %r20 = load i32, i32* %r6
    %r21 = load i32, i32* %r5
    %r22 = srem i32 %r20, %r21
    %r23 = getelementptr i32, i32* %r3, i32 0
    %r24 = getelementptr i32, i32* %r4, i32 0
    %r18 = call i32 @exgcd(i32 %r19, i32 %r22, i32* %r23, i32* %r24)
    store i32 %r18, i32* %r17
    %r25 = alloca i32
    %r26 = getelementptr i32, i32* %r3, i32 0
    %r27 = load i32, i32* %r26
    store i32 %r27, i32* %r25
    %r28 = getelementptr i32, i32* %r3, i32 0
    %r29 = getelementptr i32, i32* %r4, i32 0
    %r30 = load i32, i32* %r29
    store i32 %r30, i32* %r28
    %r31 = getelementptr i32, i32* %r4, i32 0
    %r32 = load i32, i32* %r25
    %r33 = load i32, i32* %r6
    %r34 = load i32, i32* %r5
    %r35 = sdiv i32 %r33, %r34
    %r36 = getelementptr i32, i32* %r4, i32 0
    %r37 = load i32, i32* %r36
    %r38 = mul i32 %r35, %r37
    %r39 = sub i32 %r32, %r38
    store i32 %r39, i32* %r31
    %r40 = load i32, i32* %r17
    ret i32 %r40
    br label %r13
r13:
ret i32 0
}
define dso_local i32 @main() {
    %r41 = alloca i32
    store i32 7, i32* %r41
    %r42 = alloca i32
    store i32 15, i32* %r42
    %r43 = alloca [1 x i32]
    %r_for_memset44 = getelementptr [1 x i32], [1 x i32]* %r43, i32 0, i32 0
    call void @memset(i32* %r_for_memset44, i32 0, i32 4)
    %r45 = getelementptr [1 x i32], [1 x i32]* %r43, i32 0, i32 0
    store i32 1, i32* %r45
    %r46 = alloca [1 x i32]
    %r_for_memset47 = getelementptr [1 x i32], [1 x i32]* %r46, i32 0, i32 0
    call void @memset(i32* %r_for_memset47, i32 0, i32 4)
    %r48 = getelementptr [1 x i32], [1 x i32]* %r46, i32 0, i32 0
    store i32 1, i32* %r48
    %r50 = load i32, i32* %r41
    %r51 = load i32, i32* %r42
    %r52 = getelementptr [1 x i32], [1 x i32]* %r43, i32 0, i32 0
    %r53 = getelementptr [1 x i32], [1 x i32]* %r46, i32 0, i32 0
    %r49 = call i32 @exgcd(i32 %r50, i32 %r51, i32* %r52, i32* %r53)
    %r54 = getelementptr [1 x i32], [1 x i32]* %r43, i32 0, i32 0
    %r55 = getelementptr [1 x i32], [1 x i32]* %r43, i32 0, i32 0
    %r56 = load i32, i32* %r55
    %r57 = load i32, i32* %r42
    %r58 = srem i32 %r56, %r57
    %r59 = load i32, i32* %r42
    %r60 = add i32 %r58, %r59
    %r61 = load i32, i32* %r42
    %r62 = srem i32 %r60, %r61
    store i32 %r62, i32* %r54
    %r63 = getelementptr [1 x i32], [1 x i32]* %r43, i32 0, i32 0
    %r64 = load i32, i32* %r63
    call void @putint(i32 %r64)
    ret i32 0
ret i32 0
}
