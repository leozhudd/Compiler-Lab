@a = dso_local global [10 x i32] zeroinitializer
@b = dso_local constant [11 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0]
declare void @memset(i32*, i32, i32)
declare i32 @getint()
declare void @putint(i32)
declare i32 @getch()
declare void @putch(i32)
define dso_local i32 @main(){
    %r1 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 1
    %r2 = load i32, i32* %r1
    %r3 = icmp eq i32 %r2, 1
    %r4 = zext i1 %r3 to i32
    %r5 = icmp ne i32 %r4, 0
    %r6 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 2
    %r7 = load i32, i32* %r6
    %r8 = icmp ne i32 %r7, 0
    %r9 = and i1 %r5, %r8
    %r10 = zext i1 %r9 to i32
    %r11 = icmp ne i32 %r10, 0
    %r12 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 3
    %r13 = load i32, i32* %r12
    %r14 = icmp ne i32 %r13, 0
    %r15 = or i1 %r11, %r14
    %r16 = zext i1 %r15 to i32
    %r17 = icmp ne i32 %r16, 0
    %r18 = icmp ne i32 410, 0
    %r19 = or i1 %r17, %r18
    %r20 = zext i1 %r19 to i32
    %r21 = icmp ne i32 %r20, 0
    br i1 %r21, label %r22, label %r23
r22:
    ret i32 1
    br label %r24
r23:
    br label %r24
r24:
    ret i32 0
}
