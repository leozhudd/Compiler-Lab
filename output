declare void @memset(i32*, i32, i32)
declare i32 @getint()
declare void @putint(i32)
declare i32 @getch()
declare void @putch(i32)
declare i32 @getarray(i32*)
declare void @putarray(i32, i32*)

@array = dso_local global [110 x i32] zeroinitializer
@n = dso_local global i32 0
define dso_local void @init(i32 %r1) {
    %r2 = alloca i32
    store i32 %r1, i32* %r2
    %r3 = alloca i32
    store i32 1, i32* %r3
    br label %r4
r4:
    %r7 = load i32, i32* %r3
    %r8 = load i32, i32* %r2
    %r9 = load i32, i32* %r2
    %r10 = mul i32 %r8, %r9
    %r11 = add i32 %r10, 1
    %r12 = icmp sle i32 %r7, %r11
    %r13 = zext i1 %r12 to i32
    %r14 = icmp ne i32 %r13, 0
    br i1 %r14, label %r5, label %r6
r5:
    %r15 = load i32, i32* %r3
    %r16 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 %r15
    %r17 = sub i32 0, 1
    store i32 %r17, i32* %r16
    %r18 = load i32, i32* %r3
    %r19 = add i32 %r18, 1
    store i32 %r19, i32* %r3
    br label %r4
r6:
    ret void
}
define dso_local i32 @findfa(i32 %r20) {
    %r21 = alloca i32
    store i32 %r20, i32* %r21
    %r24 = load i32, i32* %r21
    %r25 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 %r24
    %r26 = load i32, i32* %r25
    %r27 = load i32, i32* %r21
    %r28 = icmp eq i32 %r26, %r27
    %r29 = zext i1 %r28 to i32
    %r30 = icmp ne i32 %r29, 0
    br i1 %r30, label %r22, label %r23
r22:
    %r32 = load i32, i32* %r21
    ret i32 %r32
    br label %r31
r23:
    %r33 = load i32, i32* %r21
    %r34 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 %r33
    %r36 = load i32, i32* %r21
    %r37 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 %r36
    %r38 = load i32, i32* %r37
    %r35 = call i32 @findfa(i32 %r38)
    store i32 %r35, i32* %r34
    %r39 = load i32, i32* %r21
    %r40 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 %r39
    %r41 = load i32, i32* %r40
    ret i32 %r41
    br label %r31
r31:
ret i32 0
}
define dso_local void @mmerge(i32 %r42, i32 %r43) {
    %r44 = alloca i32
    store i32 %r43, i32* %r44
    %r45 = alloca i32
    store i32 %r42, i32* %r45
    %r46 = alloca i32
    %r48 = load i32, i32* %r45
    %r47 = call i32 @findfa(i32 %r48)
    store i32 %r47, i32* %r46
    %r49 = alloca i32
    %r51 = load i32, i32* %r44
    %r50 = call i32 @findfa(i32 %r51)
    store i32 %r50, i32* %r49
    %r54 = load i32, i32* %r46
    %r55 = load i32, i32* %r49
    %r56 = icmp ne i32 %r54, %r55
    %r57 = zext i1 %r56 to i32
    %r58 = icmp ne i32 %r57, 0
    br i1 %r58, label %r52, label %r53
r52:
    %r60 = load i32, i32* %r46
    %r61 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 %r60
    %r62 = load i32, i32* %r49
    store i32 %r62, i32* %r61
    br label %r59
r53:
    br label %r59
r59:
    ret void
}
define dso_local i32 @main() {
    %r63 = alloca i32
    %r64 = alloca i32
    %r65 = alloca i32
    %r66 = alloca i32
    store i32 1, i32* %r63
    br label %r67
r67:
    %r70 = load i32, i32* %r63
    %r71 = icmp ne i32 %r70, 0
    br i1 %r71, label %r68, label %r69
r68:
    %r72 = load i32, i32* %r63
    %r73 = sub i32 %r72, 1
    store i32 %r73, i32* %r63
    store i32 4, i32* @n
    store i32 10, i32* %r64
    %r74 = alloca i32
    store i32 0, i32* %r74
    %r75 = alloca i32
    store i32 0, i32* %r75
    %r76 = load i32, i32* @n
    call void @init(i32 %r76)
    %r77 = alloca i32
    %r78 = load i32, i32* @n
    %r79 = load i32, i32* @n
    %r80 = mul i32 %r78, %r79
    %r81 = add i32 %r80, 1
    store i32 %r81, i32* %r77
    br label %r82
r82:
    %r85 = load i32, i32* %r74
    %r86 = load i32, i32* %r64
    %r87 = icmp slt i32 %r85, %r86
    %r88 = zext i1 %r87 to i32
    %r89 = icmp ne i32 %r88, 0
    br i1 %r89, label %r83, label %r84
r83:
    %r90 = call i32 @getint()
    store i32 %r90, i32* %r65
    %r91 = call i32 @getint()
    store i32 %r91, i32* %r66
    %r94 = load i32, i32* %r75
    %r95 = icmp eq i32 %r94, 0
    %r96 = zext i1 %r95 to i32
    %r97 = icmp ne i32 %r96, 0
    br i1 %r97, label %r92, label %r93
r92:
    %r99 = alloca i32
    %r100 = load i32, i32* @n
    %r101 = load i32, i32* %r65
    %r102 = sub i32 %r101, 1
    %r103 = mul i32 %r100, %r102
    %r104 = load i32, i32* %r66
    %r105 = add i32 %r103, %r104
    store i32 %r105, i32* %r99
    %r106 = load i32, i32* %r99
    %r107 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 %r106
    %r108 = load i32, i32* %r99
    store i32 %r108, i32* %r107
    %r111 = load i32, i32* %r65
    %r112 = icmp eq i32 %r111, 1
    %r113 = zext i1 %r112 to i32
    %r114 = icmp ne i32 %r113, 0
    br i1 %r114, label %r109, label %r110
r109:
    %r116 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 0
    store i32 0, i32* %r116
    %r117 = load i32, i32* %r99
    call void @mmerge(i32 %r117, i32 0)
    br label %r115
r110:
    br label %r115
r115:
    %r120 = load i32, i32* %r65
    %r121 = load i32, i32* @n
    %r122 = icmp eq i32 %r120, %r121
    %r123 = zext i1 %r122 to i32
    %r124 = icmp ne i32 %r123, 0
    br i1 %r124, label %r118, label %r119
r118:
    %r126 = load i32, i32* %r77
    %r127 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 %r126
    %r128 = load i32, i32* %r77
    store i32 %r128, i32* %r127
    %r129 = load i32, i32* %r99
    %r130 = load i32, i32* %r77
    call void @mmerge(i32 %r129, i32 %r130)
    br label %r125
r119:
    br label %r125
r125:
    %r134 = load i32, i32* %r66
    %r135 = load i32, i32* @n
    %r136 = icmp slt i32 %r134, %r135
    %r137 = zext i1 %r136 to i32
    %r138 = icmp ne i32 %r137, 0
    br i1 %r138, label %r133, label %r132

r133:
    %r139 = load i32, i32* %r99
    %r140 = add i32 %r139, 1
    %r141 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 %r140
    %r142 = load i32, i32* %r141
    %r143 = sub i32 0, 1
    %r144 = icmp ne i32 %r142, %r143
    %r145 = zext i1 %r144 to i32
    %r146 = icmp ne i32 %r145, 0
    br i1 %r146, label %r131, label %r132
r131:
    %r148 = load i32, i32* %r99
    %r149 = load i32, i32* %r99
    %r150 = add i32 %r149, 1
    call void @mmerge(i32 %r148, i32 %r150)
    br label %r147
r132:
    br label %r147
r147:
    %r154 = load i32, i32* %r66
    %r155 = icmp sgt i32 %r154, 1
    %r156 = zext i1 %r155 to i32
    %r157 = icmp ne i32 %r156, 0
    br i1 %r157, label %r153, label %r152

r153:
    %r158 = load i32, i32* %r99
    %r159 = sub i32 %r158, 1
    %r160 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 %r159
    %r161 = load i32, i32* %r160
    %r162 = sub i32 0, 1
    %r163 = icmp ne i32 %r161, %r162
    %r164 = zext i1 %r163 to i32
    %r165 = icmp ne i32 %r164, 0
    br i1 %r165, label %r151, label %r152
r151:
    %r167 = load i32, i32* %r99
    %r168 = load i32, i32* %r99
    %r169 = sub i32 %r168, 1
    call void @mmerge(i32 %r167, i32 %r169)
    br label %r166
r152:
    br label %r166
r166:
    %r173 = load i32, i32* %r65
    %r174 = load i32, i32* @n
    %r175 = icmp slt i32 %r173, %r174
    %r176 = zext i1 %r175 to i32
    %r177 = icmp ne i32 %r176, 0
    br i1 %r177, label %r172, label %r171

r172:
    %r178 = load i32, i32* %r99
    %r179 = load i32, i32* @n
    %r180 = add i32 %r178, %r179
    %r181 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 %r180
    %r182 = load i32, i32* %r181
    %r183 = sub i32 0, 1
    %r184 = icmp ne i32 %r182, %r183
    %r185 = zext i1 %r184 to i32
    %r186 = icmp ne i32 %r185, 0
    br i1 %r186, label %r170, label %r171
r170:
    %r188 = load i32, i32* %r99
    %r189 = load i32, i32* %r99
    %r190 = load i32, i32* @n
    %r191 = add i32 %r189, %r190
    call void @mmerge(i32 %r188, i32 %r191)
    br label %r187
r171:
    br label %r187
r187:
    %r195 = load i32, i32* %r65
    %r196 = icmp sgt i32 %r195, 1
    %r197 = zext i1 %r196 to i32
    %r198 = icmp ne i32 %r197, 0
    br i1 %r198, label %r194, label %r193

r194:
    %r199 = load i32, i32* %r99
    %r200 = load i32, i32* @n
    %r201 = sub i32 %r199, %r200
    %r202 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 %r201
    %r203 = load i32, i32* %r202
    %r204 = sub i32 0, 1
    %r205 = icmp ne i32 %r203, %r204
    %r206 = zext i1 %r205 to i32
    %r207 = icmp ne i32 %r206, 0
    br i1 %r207, label %r192, label %r193
r192:
    %r209 = load i32, i32* %r99
    %r210 = load i32, i32* %r99
    %r211 = load i32, i32* @n
    %r212 = sub i32 %r210, %r211
    call void @mmerge(i32 %r209, i32 %r212)
    br label %r208
r193:
    br label %r208
r208:
    %r217 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 0
    %r218 = load i32, i32* %r217
    %r219 = sub i32 0, 1
    %r220 = icmp ne i32 %r218, %r219
    %r221 = zext i1 %r220 to i32
    %r222 = icmp ne i32 %r221, 0
    br i1 %r222, label %r216, label %r214

r216:
    %r223 = load i32, i32* %r77
    %r224 = getelementptr [110 x i32], [110 x i32]* @array, i32 0, i32 %r223
    %r225 = load i32, i32* %r224
    %r226 = sub i32 0, 1
    %r227 = icmp ne i32 %r225, %r226
    %r228 = zext i1 %r227 to i32
    %r229 = icmp ne i32 %r228, 0
    br i1 %r229, label %r215, label %r214

r215:
    %r230 = call i32 @findfa(i32 0)
    %r232 = load i32, i32* %r77
    %r231 = call i32 @findfa(i32 %r232)
    %r233 = icmp eq i32 %r230, %r231
    %r234 = zext i1 %r233 to i32
    %r235 = icmp ne i32 %r234, 0
    br i1 %r235, label %r213, label %r214
r213:
    store i32 1, i32* %r75
    %r237 = alloca i32
    %r238 = load i32, i32* %r74
    %r239 = add i32 %r238, 1
    store i32 %r239, i32* %r237
    %r240 = load i32, i32* %r237
    call void @putint(i32 %r240)
    call void @putch(i32 10)
    br label %r236
r214:
    br label %r236
r236:
    br label %r98
r93:
    br label %r98
r98:
    %r241 = load i32, i32* %r74
    %r242 = add i32 %r241, 1
    store i32 %r242, i32* %r74
    br label %r82
r84:
    %r245 = load i32, i32* %r75
    %r246 = icmp eq i32 %r245, 0
    %r247 = zext i1 %r246 to i32
    %r248 = icmp ne i32 %r247, 0
    br i1 %r248, label %r243, label %r244
r243:
    %r250 = sub i32 0, 1
    call void @putint(i32 %r250)
    call void @putch(i32 10)
    br label %r249
r244:
    br label %r249
r249:
    br label %r67
r69:
    ret i32 0
ret i32 0
}
