declare void @memset(i32*, i32, i32)
declare i32 @getint()
declare void @putint(i32)
declare i32 @getch()
declare void @putch(i32)
declare i32 @getarray(i32*)
declare void @putarray(i32, i32*)

define dso_local void @set1(i32 %r1, i32* %r2) {
    %r3 = getelementptr i32, i32* %r2, i32 %r1
    store i32 1, i32* %r3
    ret void
}
define dso_local i32 @main() {
    %r4 = alloca [2 x [5 x i32]]
    %r_for_memset5 = getelementptr [2 x [5 x i32]], [2 x [5 x i32]]* %r4, i32 0, i32 0, i32 0
    call void @memset(i32* %r_for_memset5, i32 0, i32 40)
    %r6 = alloca i32
    %r8 = getelementptr [2 x [5 x i32]], [2 x [5 x i32]]* %r4, i32 0, i32 0, i32 0
inexp
    %r7 = call i32 @getarray(i32* %r8)
    store i32 %r7, i32* %r6
    %r10 = getelementptr [2 x [5 x i32]], [2 x [5 x i32]]* %r4, i32 0, i32 1, i32 0
inexp
    %r9 = call i32 @getarray(i32* %r10)
    %r11 = alloca i32
    store i32 0, i32* %r11
    br label %r12
r12:
    %r15 = load i32, i32* %r11
    %r16 = load i32, i32* %r6
    %r17 = icmp slt i32 %r15, %r16
    %r18 = zext i1 %r17 to i32
    %r19 = icmp ne i32 %r18, 0
    br i1 %r19, label %r13, label %r14
r13:
    %r20 = load i32, i32* %r11
inexp
    %r21 = load i32, i32* %r11
    %r22 = srem i32 %r21, 2
    %r23 = getelementptr [2 x [5 x i32]], [2 x [5 x i32]]* %r4, i32 0, i32 %r22, i32 0
inexp
    call void @set1(i32 %r20, i32* %r23)
    %r24 = load i32, i32* %r11
    %r25 = add i32 %r24, 1
    store i32 %r25, i32* %r11
    br label %r12
r14:
    %r26 = load i32, i32* %r6
inexp
    %r27 = getelementptr [2 x [5 x i32]], [2 x [5 x i32]]* %r4, i32 0, i32 0, i32 0
inexp
    call void @putarray(i32 %r26, i32* %r27)
    %r28 = load i32, i32* %r6
inexp
    %r29 = getelementptr [2 x [5 x i32]], [2 x [5 x i32]]* %r4, i32 0, i32 1, i32 0
inexp
    call void @putarray(i32 %r28, i32* %r29)
    ret i32 0
}
